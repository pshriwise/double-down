name: Double Down CI

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

env:
  BUILD_TYPE: Release
  HDF5_ROOT: /usr
  DDBUILD: $HOME/opt/DD
  DDHOME: $GITHUB_WORKSPACE
  LD_LIBRARY_PATH: $HOME/EMBREE/lib:$HOME/MOAB/lib:$HOME/DAGMC/lib:$HOME/dd/lib
  DISPLAY: 99.0

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install system packages
      shell: bash
      run: sudo $GITHUB_WORKSPACE/ci/install-apt-pkgs.sh

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Debug out
      shell: bash
      run: ls $GITHUB_WORKSPACE/ci

    - name: MOAB Build
      shell: bash
      run: $GITHUB_WORKSPACE/ci/moab-install.sh

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build
      # Note the current convention is to use the -S and -B options here to specify source
      # and build directories, but this is only available with CMake 3.13 and higher.
      # The CMake binaries on the Github Actions machines are (as of this writing) 3.12
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DCMAKE_INSTALL_PREFIX=$HOME/dd -DMOAB_DIR=$HOME/MOAB

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE

    - name: Install
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: make install

    - name: Check Install
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ls $HOME/dd

    # This test is here to check compatibility with DAGMC's develop branch
    # An error here shouldn't cause the build to fail
    - name: DAGMC Build and Test
      continue-on-error: true
      shell: bash
      run: $GITHUB_WORKSPACE/ci/dagmc-install.sh
